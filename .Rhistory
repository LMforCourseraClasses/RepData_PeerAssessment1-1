activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("integer", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
TimeIntervalAverageSteps <- by(actualsteps[,1:3], interval, colMeans)
TimeIntervalAverageSteps <- by(actualsteps[,1:3], actualsteps[,3], colMeans)
TimeIntervalSteps <- cbind(actualsteps[,1], actualsteps[,3])
TimeIntervalAverageSteps <- by(TimeIntervalSteps, interval, colMeans)
TimeIntervalAverageSteps <- by(TimeIntervalSteps, TimeIntervalSteps$interval, colMeans)
View(TimeIntervalSteps)
TimeIntervalAverageSteps <- by(TimeIntervalSteps, TimeIntervalSteps[,2], colMeans)
plot(TimeIntervalAverageSteps[,2], TimeIntervalAverageSteps[,1])
plot(TimeIntervalAverageSteps$interval, TimeIntervalAverageSteps$steps)
TimeIntervalAverageSteps
TimeIntervalSteps <- cbind(actualsteps[,3], actualsteps[,1])
TimeIntervalAverageSteps <- by(TimeIntervalSteps, TimeIntervalSteps[,1],
colMeans)
plot(TimeIntervalAverageSteps)
plot(TimeIntervalAverageSteps[,1],TimeIntervalAverageSteps[,2])
plot(TimeIntervalAverageSteps[,1],TimeIntervalAverageSteps[,2], "Time Interval", "Average Steps")
?aggregate
TimeIntervalAverageSteps <- aggregate(actualsteps$steps, list(interval=actualsteps$interval), mean)
View(TimeIntervalSteps)
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("integer", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TimeIntervalSteps <- cbind(actualsteps[,3], actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps, list(TimeIntervalSteps$interval), mean)
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps, list(TimeIntervalSteps[,3]), mean)
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps, list(TimeIntervalSteps[,1]), mean)
View(TimeIntervalSteps)
View(TimeIntervalAverageSteps)
plot(TimeIntervalAverageSteps[,1], TimeIntervalAverageSteps[,3])
plot(TimeIntervalAverageSteps)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries)
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2], list(TimeIntervalSteps[,1]), mean)
View(TimeIntervalAverageSteps)
TimeIntervalSteps <- cbind(actualsteps[,3], actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2], list(TimeIntervalSteps[,1]), mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries)
plot(AverageStepsTimeSeries[,2])
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps)]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps),2]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2])]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
View(TimeIntervalAverageSteps)
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("integer", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,2]),mean)
View(TimeIntervalSteps)
View(TimeIntervalAverageSteps)
> TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
+                                       list(TimeIntervalSteps[,1]),mean)
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries)
plot(AverageStepsTimeSeries[,2])
plot(AverageStepsTimeSeries)
plot(AverageStepsTimeSeries[,1],AverageStepsTimeSeries[,2])
plot(AverageStepsTimeSeries, type="l")
plot(AverageStepsTimeSeries)
plot(AverageStepsTimeSeries[,1],AverageStepsTimeSeries[,2])
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2],
xlabel = "Time Interval", ylabel = "Average Steps")
?plot
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps)]
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2])]
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
print(MaxSteps[1,])
print(MaxSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
setwd("~/Lucia/CourseraR/RepData_PeerAssessment1-1")
setwd("C:/Lucia/CourseraR/RepData_PeerAssessment1-1")
getwd()
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("integer", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
MissingValues <- activitydata[is.na(activitydata)]
print(paste("The total number of missing values is", length(MissingValues)))
View(TimeIntervalAverageSteps)
?filter
ImputedSteps <- activitydata
for (i in 1:17568) {if (is.na(activitydata[i,1]) {
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2]
}}
View(ImputedSteps)
ImputedSteps <- activitydata
for (i in 1:17568) {if is.na(activitydata[i,1]
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2]
}
ImputedSteps <- activitydata
for (i in 1:17568) {if (is.na(activitydata[i,1])
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2]
}
ImputedSteps <- activitydata
StepInterval <- numeric()
for (i in 1:17568) {if (is.na(activitydata[i,1])
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2]
}
ImputedSteps <- activitydata
StepInterval <- numeric()
for (i in 1:17568) if (is.na(activitydata[i,1])
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2]
ImputedSteps <- activitydata
StepInterval <- numeric()
for (i in 1:17568) (if (is.na(activitydata[i,1])
StepInterval <- activitydata[i,3]
ImputedSteps[i,1] <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,2] == StepInterval),2])
ImputedSteps <- activitydata
ImputedSteps[is.na(activitydata[,1]),1] <-
TimeIntervalAverageSteps[
which(TimeIntervalAverageSteps[,2] == activitydata[is.na(activitydata[,1]),3]),2]
View(ImputedSteps)
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("numeric", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
MissingValues <- activitydata[is.na(activitydata)]
print(paste("The total number of missing values is", length(MissingValues)))
ImputedSteps <- activitydata
ImputedSteps[is.na(activitydata[,1]),1] <-
TimeIntervalAverageSteps[
which(TimeIntervalAverageSteps[,2] == activitydata[is.na(activitydata[,1]),3]),2]
View(ImputedSteps)
View(TimeIntervalAverageSteps)
ImputedSteps <- activitydata
for (i in 1:17568) {if (activitydata[i,1]==NA) {
TimeInterval <- activitydata[i,3]
AverageSteps <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,1]==TimeInterval),2]
ImputedSteps[i,1]<-AverageSteps
}}
for (i in 1:17568) {if (activitydata[i,1]=="NA"") {
TimeInterval <- activitydata[i,3]
AverageSteps <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,1]==TimeInterval),2]
ImputedSteps[i,1]<-AverageSteps
}}
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("numeric", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
MissingValues <- activitydata[is.na(activitydata)]
print(paste("The total number of missing values is", length(MissingValues)))
ImputedSteps <- activitydata
for (i in 1:17568) {if (activitydata[i,1]=="NA") {
TimeInterval <- activitydata[i,3]
AverageSteps <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,1]==TimeInterval),2]
ImputedSteps[i,1]<-AverageSteps
}}
View(ImputedSteps)
ImputedSteps <- activitydata
RowsWithNA <- which(is.na(activitydata[i,1]))
?which
RowsWithNA <- is.na(activitydata[i,1])
RowsWithNA <- is.na(activitydata[,1])
TimeIntervalsForNA <- activitydata[,3]*RowsWithNA
View(TimeIntervalAverageSteps)
MissingValues
MissingValues <- is.na(activitydata)
TimeIntervalsForNA <- activitydata[is.na(activitydata), 3]
print(paste("The total number of missing values is", length(TimeIntervalsForNA)))
TimeIntervalsForNA
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("numeric", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print("The time interval and average value for the maximum # of steps:")
print(MaxSteps)
View(MaxSteps)
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print(paste("The time interval for the maximum # of steps is:", MaxSteps[1,1] ))
print(paste("The average value for the maximum # of steps is:", MaxSteps[1,2]))
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("numeric", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print(paste("The time interval for the maximum # of steps is:", MaxSteps[1,1]))
print(paste("The average value for the maximum # of steps is:", MaxSteps[1,2]))
NASteps <- activitydata[is.na(activitydata),1]
print(paste("The total number of missing values is", length(NASteps)))
RowsWithNA <- is.na(activitydata[,1])
TimeIntervalsForNA <- activitydata[,3]*RowsWithNA
RowsWithNA <- is.na(activitydata[,1])
TimeIntervalsForNA <- activitydata[,3]*RowsWithNA
AverageStepsForNA <-
TimesIntervalAverageSteps[(TimeIntervalsForNA==TimeIntervalAverageSteps[,1],2)]
AverageStepsForNA <-
TimesIntervalAverageSteps[(TimeIntervalsForNA==TimeIntervalAverageSteps[,1]),2]
AverageStepsForNA <-
TimeIntervalAverageSteps[(TimeIntervalsForNA==TimeIntervalAverageSteps[,1]),2]
View(TimeIntervalAverageSteps)
activitydata <- read.csv("C:/Users/Matthew/Documents/Lucia/CourseraR/RepData_PeerAssessment1-1/activity.csv", header=TRUE, colClasses = c("numeric", "Date", "integer"))
actualsteps <- activitydata[!is.na(activitydata[,1]),]
TimeIntervalSteps <- cbind(actualsteps[,3],actualsteps[,1])
TimeIntervalAverageSteps <- aggregate(TimeIntervalSteps[,2],
list(TimeIntervalSteps[,1]),mean)
AverageStepsTimeSeries <- ts(TimeIntervalAverageSteps)
plot(AverageStepsTimeSeries[,1], AverageStepsTimeSeries[,2], type = "l",
xlab = "Time Interval", ylab = "Average Steps")
MaxSteps <- TimeIntervalAverageSteps[which.max(TimeIntervalAverageSteps[,2]),]
print(paste("The time interval for the maximum # of steps is:", MaxSteps[1,1]))
print(paste("The average value for the maximum # of steps is:", MaxSteps[1,2]))
NASteps <- activitydata[is.na(activitydata),1]
print(paste("The total number of missing values is", length(NASteps)))
ImputedSteps <- activitydata
if (is.na(activitydata[,1])) {
ImputedSteps[,1] <-
TimeIntervalAverageSteps[
(activitydata[(is.na(activitydata[,1])),3]==TimeIntervalAverageSteps[,1]),2]
}
ImputedSteps <- activitydata
for (i in 1:17568) {
if (is.na(activitydata[i,1])) {
TimeInterval <- activitydata[i,3]
AverageSteps <-
TimeIntervalAverageSteps[which(TimeIntervalAverageSteps[,1]==TimeInterval),2]
ImputedSteps[i,1] <- AverageSteps
}
}
View(ImputedSteps)
TotalImputedStepsEachDay <- tapply(ImputedSteps$steps, ImputedSteps$date, sum)
hist(TotalImputedStepsEachDay)
print(paste("The mean of TotalImputedStepsEachDay is", mean(TotalImputedStepsEachDay)))
print(paste("The median of TotalImputedStepsEachDay is",
median(TotalImputedStepsEachDay)))
TotalStepsEachDay <- tapply(actualsteps$steps, actualsteps$date, sum)
hist(TotalStepsEachDay)
print(paste("The mean of TotalStepsEachDay is", mean(TotalStepsEachDay)))
print(paste("The median of TotalStepsEachDay is",
median(TotalStepsEachDay)))
Weekdays <- weekdays(ImputedSteps[,2])
Weekdays
If (Weekday == "Saturday" or "Sunday") {Weekday < "weekend"} else {weekday <- "weekday"}
If (Weekday == "Saturday" OR "Sunday") {Weekday < "weekend"} else {weekday <- "weekday"}
If (Weekday == ("Saturday" OR "Sunday")) {Weekday <- "weekend"} else {weekday <- "weekday"}
If (Weekdays == ("Saturday" OR "Sunday")) {Weekdays <- "weekend"} else {Weekdays <- "weekday"}
Weekdays <- weekdays(ImputedSteps[,2])
If (Weekdays == ("Saturday" OR "Sunday")) {
Weekdays <- "weekend"
}
else {Weekdays <- "weekday"
}
Weekdays <- weekdays(ImputedSteps[,2])
If (Weekdays == ("Saturday" OR "Sunday"))
Weekdays <- "weekend"
else {Weekdays <- "weekday"
Weekdays <- weekdays(ImputedSteps[,2])
If (Weekdays == ("Saturday" OR "Sunday"))
Weekdays <- "weekend"
else Weekdays <- "weekday"
Weekdays <- weekdays(ImputedSteps[,2])
If (Weekdays == ("Saturday" OR "Sunday"))
Weekdays <- "weekend"
Weekdays <- "weekday"
Weekdays <- weekdays(ImputedSteps[,2])
If (Weekdays == ("Saturday" | "Sunday"))
Weekdays <- "weekend"
Weekdays <- "weekday"
if (Weekdays == ("Saturday" | "Sunday"))
Weekdays <- "weekend"
Weekdays <- "weekday"
